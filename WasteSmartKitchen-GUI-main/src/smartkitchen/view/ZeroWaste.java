/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package smartkitchen.view;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.*;
import com.toedter.calendar.JDateChooser;


/**
 *
 * @author ASUS
 */
public class ZeroWaste extends javax.swing.JFrame {
    private Connection conn;
    

    /**
     * Creates new form MainMenu
     */
    public ZeroWaste() {
        initComponents();
        connectDatabase();
        loadData();
    }
    
    private void connectDatabase() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/smartkitchen?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC";
            String user = "root";
            String pass = "";
            conn = DriverManager.getConnection(url, user, pass);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal koneksi database:\n" + e.getMessage());
            System.exit(0);
        }
    }

    private void loadData() {
        try {
            String sql = "SELECT * FROM stok_bahan";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            DefaultTableModel model = (DefaultTableModel) tabelStok.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                int id = rs.getInt("id");
                String nama = rs.getString("nama_bahan");
                int jumlah = rs.getInt("jumlah");
                Date kadaluarsa = rs.getDate("kadaluarsa");
                String tanggal = (kadaluarsa != null) ? kadaluarsa.toString() : "";

                model.addRow(new Object[]{id, nama, jumlah, tanggal});
            }
            rs.close();
            st.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal load data:\n" + e.getMessage());
        }
    }
    
    private void tambahData(String nama, int jumlah, String kadaluarsa) {
        try {
            String sql = "INSERT INTO stok_bahan (nama_bahan, jumlah, kadaluarsa) VALUES (?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, nama);
            pst.setInt(2, jumlah);

            Date tanggal = null;
            try {
                tanggal = Date.valueOf(kadaluarsa);
            } catch (IllegalArgumentException ex) {
                tanggal = null;
            }
            pst.setDate(3, tanggal);

            pst.executeUpdate();
            pst.close();

            loadData();
            JOptionPane.showMessageDialog(this, "Data berhasil ditambah");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal tambah data:\n" + e.getMessage());
        }
    }

    private void hapusData(String idStr) {
        try {
            int id = Integer.parseInt(idStr);
            String sql = "DELETE FROM stok_bahan WHERE id = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, id);

            int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin hapus data ID " + id + "?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                int rows = pst.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                    loadData();
                } else {
                    JOptionPane.showMessageDialog(this, "Data tidak ditemukan");
                }
            }
            pst.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal hapus data:\n" + e.getMessage());
        }
    }
    private void resetAutoIncrement() {
    try {
        String sql = "ALTER TABLE stok_bahan AUTO_INCREMENT = 1";
        Statement st = conn.createStatement();
        st.executeUpdate(sql);
        st.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal reset auto increment:\n" + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        NamaBahan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        spinnerJumlah = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        txtKadaluarsa = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelStok = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nama Bahan");

        NamaBahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaBahanActionPerformed(evt);
            }
        });

        jLabel2.setText("Jumlah");

        jLabel3.setText("Kadaluarsa");

        txtKadaluarsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKadaluarsaActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnSave.setText("Save");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tabelStok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Bahan", "Jumlah", "Tanggal Kadaluarsa"
            }
        ));
        jScrollPane1.setViewportView(tabelStok);

        jLabel4.setText("ZeroWasteSmartKitchen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTambah)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(NamaBahan, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(txtKadaluarsa))
                                .addGap(36, 36, 36)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(NamaBahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKadaluarsa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnSave)
                    .addComponent(btnDelete))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NamaBahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaBahanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaBahanActionPerformed

    private void txtKadaluarsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKadaluarsaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKadaluarsaActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
      
    String nama = NamaBahan.getText();
        int jumlah = (int) spinnerJumlah.getValue();
        java.util.Date utilDate = dateChooserKadaluarsa.getDate();

        if (nama.isEmpty() || utilDate == null) {
            JOptionPane.showMessageDialog(this, "Nama bahan dan tanggal kadaluarsa harus diisi");
            return;
        }

        String tanggal = new java.sql.Date(utilDate.getTime()).toString();
        tambahData(nama, jumlah, tanggal);

        NamaBahan.setText("");
        spinnerJumlah.setValue(0);
        dateChooserKadaluarsa.setDate(null);


    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         int row = tabelStok.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus dari tabel");
            return;
        }
        String id = tabelStok.getValueAt(row, 0).toString();
        hapusData(id);
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {}

        java.awt.EventQueue.invokeLater(() -> {
            new ZeroWaste().setVisible(true);
        });
    }
private com.toedter.calendar.JDateChooser dateChooserKadaluarsa;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NamaBahan;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinnerJumlah;
    private javax.swing.JTable tabelStok;
    private javax.swing.JTextField txtKadaluarsa;
    // End of variables declaration//GEN-END:variables
}
